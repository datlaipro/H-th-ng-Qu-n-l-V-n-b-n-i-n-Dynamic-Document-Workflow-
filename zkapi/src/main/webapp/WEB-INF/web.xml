<?xml version="1.0" encoding="UTF-8"?>
<web-app xmlns="http://xmlns.jcp.org/xml/ns/javaee"
  xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
  xsi:schemaLocation="http://xmlns.jcp.org/xml/ns/javaee http://xmlns.jcp.org/xml/ns/javaee/web-app_3_1.xsd"
  version="3.1">

  <display-name>zkapi</display-name>

  <!-- ===== HTTP session dùng cookie (Tomcat quản lý) ===== -->
  <session-config>
    <session-timeout>60</session-timeout>
    <cookie-config>
      <name>JSESSIONID</name>
      <path>/</path>
      <http-only>true</http-only>
      <!-- <secure>true</secure>  Bật khi dùng HTTPS -->
    </cookie-config>
    <tracking-mode>COOKIE</tracking-mode>
  </session-config>

  <!-- ===== CORS chạy trước và phủ toàn app ===== -->
  <filter>
    <filter-name>CorsFilter</filter-name>
    <filter-class>org.apache.catalina.filters.CorsFilter</filter-class>
    <async-supported>true</async-supported>
    <init-param>
      <param-name>cors.allowed.origins</param-name>
      <param-value>http://localhost:4200</param-value>
    </init-param>
    <init-param>
      <param-name>cors.allowed.methods</param-name>
      <param-value>GET,POST,PUT,PATCH,DELETE,OPTIONS</param-value>
    </init-param>
    <init-param>
      <param-name>cors.allowed.headers</param-name>
      <param-value>
        Origin,Accept,X-Requested-With,Content-Type,Authorization,Access-Control-Request-Method,Access-Control-Request-Headers</param-value>
    </init-param>
    <init-param>
      <param-name>cors.exposed.headers</param-name>
      <param-value>Location,Content-Disposition,Set-Cookie</param-value>
    </init-param>
    <init-param>
      <param-name>cors.support.credentials</param-name>
      <param-value>true</param-value>
    </init-param>
    <init-param>
      <param-name>cors.preflight.maxage</param-name>
      <param-value>3600</param-value>
    </init-param>
  </filter>
  <filter-mapping>
    <filter-name>CorsFilter</filter-name>
    <url-pattern>/*</url-pattern>
    <dispatcher>REQUEST</dispatcher>
    <dispatcher>ASYNC</dispatcher>
  </filter-mapping>

  <!-- ===== AuthFilter ===== -->
  <filter>
    <filter-name>AuthFilter</filter-name>
    <filter-class>com.github.datlaipro.docflow.api.web.AuthFilter</filter-class>
    <async-supported>true</async-supported>
  </filter>
  <filter-mapping>
    <filter-name>AuthFilter</filter-name>
    <url-pattern>/api/*</url-pattern>
    <dispatcher>REQUEST</dispatcher>
  </filter-mapping>

  <!-- ===== GlobalErrorFilter ===== -->
  <filter>
    <filter-name>GlobalErrorFilter</filter-name>
    <filter-class>com.github.datlaipro.docflow.api.shared.web.GlobalErrorFilter</filter-class>
    <async-supported>true</async-supported>
  </filter>
  <filter-mapping>
    <filter-name>GlobalErrorFilter</filter-name>
    <url-pattern>/*</url-pattern>
  </filter-mapping>

  <!-- ===== Servlets Auth ===== -->
  <servlet>
    <servlet-name>LoginServlet</servlet-name>
    <servlet-class>com.github.datlaipro.docflow.api.web.LoginServlet</servlet-class>
    <async-supported>true</async-supported>
  </servlet>
  <servlet-mapping>
    <servlet-name>LoginServlet</servlet-name>
    <url-pattern>/api/auth/login</url-pattern>
  </servlet-mapping>

  <servlet>
    <servlet-name>RegisterServlet</servlet-name>
    <servlet-class>com.github.datlaipro.docflow.api.web.RegisterServlet</servlet-class>
    <async-supported>true</async-supported>
  </servlet>
  <servlet-mapping>
    <servlet-name>RegisterServlet</servlet-name>
    <url-pattern>/api/auth/register</url-pattern>
  </servlet-mapping>

  <servlet>
    <servlet-name>LogoutServlet</servlet-name>
    <servlet-class>com.github.datlaipro.docflow.api.web.LogoutServlet</servlet-class>
    <async-supported>true</async-supported>
  </servlet>
  <servlet-mapping>
    <servlet-name>LogoutServlet</servlet-name>
    <url-pattern>/api/auth/logout</url-pattern>
  </servlet-mapping>

  <servlet>
    <servlet-name>MeServlet</servlet-name>
    <servlet-class>com.github.datlaipro.docflow.api.web.MeServlet</servlet-class>
    <async-supported>true</async-supported>
  </servlet>
  <servlet-mapping>
    <servlet-name>MeServlet</servlet-name>
    <url-pattern>/api/auth/me</url-pattern>
  </servlet-mapping>

  <servlet>
    <servlet-name>RefreshServlet</servlet-name>
    <servlet-class>com.github.datlaipro.docflow.api.web.RefreshServlet</servlet-class>
    <async-supported>true</async-supported>
  </servlet>
  <servlet-mapping>
    <servlet-name>RefreshServlet</servlet-name>
    <url-pattern>/api/auth/refresh</url-pattern>
  </servlet-mapping>

  <!-- ===== Create Document (Servlet gọi Service Impl của bạn) ===== -->
  <servlet>
    <servlet-name>CreateDocumentServlet</servlet-name>
    <!-- CHỈNH Ở ĐÂY: servlet ở package document/creat/web -->
    <servlet-class>com.github.datlaipro.docflow.api.document.creat.web.CreateDocumentServlet</servlet-class>
    <load-on-startup>1</load-on-startup>
    <async-supported>true</async-supported>
  </servlet>
  <servlet-mapping>
    <servlet-name>CreateDocumentServlet</servlet-name>
    <url-pattern>/api/documents</url-pattern>
  </servlet-mapping>


  <!-- ===== Presign Upload (Servlet gọi Service Impl của bạn) ===== -->
  <servlet>
    <servlet-name>PresignUploadServlet</servlet-name>
    <servlet-class>com.github.datlaipro.docflow.api.document.creat.web.PresignUploadServlet</servlet-class>
    <load-on-startup>1</load-on-startup>
    <async-supported>true</async-supported>
  </servlet>
  <servlet-mapping>
    <servlet-name>PresignUploadServlet</servlet-name>
    <url-pattern>/api/uploads</url-pattern>
  </servlet-mapping>


</web-app>